      MODULE NMPRD4P
      USE SIZES, ONLY: DPSIZE
      USE NMPRD4,ONLY: VRBL
      IMPLICIT NONE
      SAVE
      REAL(KIND=DPSIZE), DIMENSION (:),POINTER ::COM
      REAL(KIND=DPSIZE), POINTER ::CWT,TVVMAX,VMAX,TVKM,KM,TVV2,V2
      REAL(KIND=DPSIZE), POINTER ::TVKA,KA,SC,Y,CONC,A000032,A000034
      REAL(KIND=DPSIZE), POINTER ::A000035,D000001,D000002,D000034
      REAL(KIND=DPSIZE), POINTER ::D000033,C000033,C000032,D000036
      REAL(KIND=DPSIZE), POINTER ::D000035,A000036,A000037,E000005
      REAL(KIND=DPSIZE), POINTER ::F000082,E000007,E000009,F000088
      REAL(KIND=DPSIZE), POINTER ::F000085,F000089,F000086
      CONTAINS
      SUBROUTINE ASSOCNMPRD4
      COM=>VRBL
      CWT=>COM(000001);TVVMAX=>COM(000002);VMAX=>COM(000003)
      TVKM=>COM(000004);KM=>COM(000005);TVV2=>COM(000006)
      V2=>COM(000007);TVKA=>COM(000008);KA=>COM(000009)
      SC=>COM(000010);Y=>COM(000011);CONC=>COM(000012)
      A000032=>COM(000013);A000034=>COM(000014);A000035=>COM(000015)
      D000001=>COM(000016);D000002=>COM(000017);D000034=>COM(000018)
      D000033=>COM(000019);C000033=>COM(000020);C000032=>COM(000021)
      D000036=>COM(000022);D000035=>COM(000023);A000036=>COM(000024)
      A000037=>COM(000025);E000005=>COM(000026);F000082=>COM(000027)
      E000007=>COM(000028);E000009=>COM(000029);F000088=>COM(000030)
      F000085=>COM(000031);F000089=>COM(000032);F000086=>COM(000033)
      END SUBROUTINE ASSOCNMPRD4
      END MODULE NMPRD4P
      SUBROUTINE MODEL (IDNO,NCM,NPAR,IR,IATT,LINK)                           
      USE PRMOD_CHAR, ONLY: NAME                                              
      USE SIZES,     ONLY: DPSIZE,ISIZE,SD
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      INTEGER(KIND=ISIZE) :: IDNO,NCM,NPAR,IR,IATT,LINK,I,J                   
      DIMENSION :: IATT(IR,*),LINK(IR,*)                                      
      SAVE
      INTEGER(KIND=ISIZE), DIMENSION (2,7) :: MOD
      CHARACTER(LEN=SD), DIMENSION(2) :: CMOD
      DATA (MOD(I,  1),I=  1,  2)/&
      1,1 /
      DATA (MOD(I,  2),I=  1,  2)/&
      1,1 /
      DATA (MOD(I,  3),I=  1,  2)/&
      1,0 /
      DATA (MOD(I,  4),I=  1,  2)/&
      0,1 /
      DATA (MOD(I,  5),I=  1,  2)/&
      1,0 /
      DATA (MOD(I,  6),I=  1,  2)/&
      0,0 /
      DATA (MOD(I,  7),I=  1,  2)/&
      0,0 /
      DATA (CMOD(I),I=  1,  2) &
      /'DEPOT','CENTRAL'/
      FORALL (I=1:2) NAME(I)=CMOD(I)
      FORALL (I=1:2,J=1:7) IATT(I,J)=MOD(I,J)
      IDNO=9999                                                               
      NCM=  2
      NPAR=004
      RETURN
      END
      SUBROUTINE PK(ICALL,IDEF,THETA,IREV,EVTREC,NVNT,INDXS,IRGG,GG,NETAS)      
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMBAYES_REAL,    ONLY: PRIOR_INFO
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_INT, ONLY: PRED_IGNORE_DATA,PRED_IGNORE_DATA_TEST
      USE PRCOM_INT, ONLY: DES_DER=>MITER
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,COMACT,COMSAV,IFIRSTEM,FIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMPRD_INT, ONLY: IQUIT
      USE PROCM_INT, ONLY: NEWIND=>PNEWIF                                       
      USE NMBAYES_REAL, ONLY: LDF                                             
      USE NMBAYES_INT, ONLY: FLDF                                             
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                          
      REAL(KIND=DPSIZE) :: EVTREC                                               
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS,IRGG,NETAS              
      DIMENSION :: IDEF(7,*),THETA(*),EVTREC(IREV,*),INDXS(*),GG(IRGG,GPKD+1,*) 
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN                                                      
      CALL ASSOCNMPRD4
      IDEF(   1,0001)=  -9
      IDEF(   1,0002)=  -1
      IDEF(   1,0003)=   0
      IDEF(   1,0004)=   0
      IDEF(   2,0003)=   0
      IDEF(   2,0004)=   0
      IDEF(   3,0002)=   5
      CALL GETETA(ETA)                                                          
      IF (IQUIT == 1) RETURN                                                    
      RETURN                                                                    
      ENDIF                                                                     
      IF (NEWIND /= 2) THEN
      IF (ICALL == 4) THEN
      CALL SIMETA(ETA)
      ELSE
      CALL GETETA(ETA)
      ENDIF
      IF (IQUIT == 1) RETURN
      ENDIF
 !  level            0
      WT=EVTREC(NVNT,005)
      CWT=WT/70.D0 
      TVVMAX=THETA(001) 
      B000001=DEXP(ETA(001)) 
      VMAX=TVVMAX*B000001 
      TVKM=THETA(002) 
      KM=TVKM 
      TVV2=THETA(003) 
      B000003=DEXP(ETA(002)) 
      V2=TVV2*B000003 
      TVKA=THETA(004) 
      KA=TVKA 
      SC=V2 
      P000001=SC 
      P000002=KA 
      P000003=KM 
      P000004=VMAX 
      IF (FIRSTEM == 1) THEN
!                      A000032 = DERIVATIVE OF VMAX W.R.T. ETA(001)
      A000032=TVVMAX*B000001 
!                      A000034 = DERIVATIVE OF V2 W.R.T. ETA(002)
      A000034=TVV2*B000003 
!                      A000035 = DERIVATIVE OF SC W.R.T. ETA(002)
      A000035=A000034 
!                      A000036 = DERIVATIVE OF P000001 W.R.T. ETA(002)
      A000036=A000035 
!                      A000037 = DERIVATIVE OF P000004 W.R.T. ETA(001)
      A000037=A000032 
      GG(0001,1,1)=P000001
      GG(0001,0003,1)=A000036
      GG(0002,1,1)=P000002
      GG(0003,1,1)=P000003
      GG(0004,1,1)=P000004
      GG(0004,0002,1)=A000037
      GG(0005,1,1)=SC
      GG(0005,0003,1)=A000035
      ELSE
      GG(0001,1,1)=P000001
      GG(0002,1,1)=P000002
      GG(0003,1,1)=P000003
      GG(0004,1,1)=P000004
      GG(0005,1,1)=SC
      ENDIF
      RETURN
      END
      SUBROUTINE ERROR (ICALL,IDEF,THETA,IREV,EVTREC,NVNT,INDXS,F,G,HH)       
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMPRD_INT, ONLY: PRED_IGNORE_DATA,PRED_IGNORE_DATA_TEST
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,IQUIT,IFIRSTEM,FIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_INT, ONLY: NEWL2
      USE PROCM_INT, ONLY: NEWIND=>PNEWIF                                       
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                        
      REAL(KIND=DPSIZE) :: EVTREC                                             
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS                       
      DIMENSION :: IDEF(*),THETA(*),EVTREC(IREV,*),INDXS(*)                   
      REAL(KIND=DPSIZE) :: G(GERD,*),HH(HERD,*)                               
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN                                                    
      CALL ASSOCNMPRD4
      IDEF(2)=-1
      IDEF(3)=000
      RETURN
      ENDIF
      IF (ICALL == 4) THEN
      IF (NEWL2 == 1) THEN
      CALL SIMEPS(EPS)
      IF (IQUIT == 1) RETURN
      ENDIF
      ENDIF
      D000001=G(001,1)
      D000002=G(002,1)
 !  level            0
      B000001=DEXP(EPS(002)) 
      Y=F*B000001+EPS(001) 
!                      C000032 = DERIVATIVE OF Y W.R.T. EPS(002)
      C000032=F*B000001 
!                      C000033 = DERIVATIVE OF Y W.R.T. EPS(001)
      C000033=1.D0 
      IF (FIRSTEM == 1) THEN !1
!                      D000033 = DERIVATIVE OF Y W.R.T. ETA(002)
      D000033=B000001*D000002 
!                      D000034 = DERIVATIVE OF Y W.R.T. ETA(001)
      D000034=B000001*D000001 
!                      D000035 = DERIVATIVE OF C000032 W.R.T. ETA(002)
      D000035=B000001*D000002 
!                      D000036 = DERIVATIVE OF C000032 W.R.T. ETA(001)
      D000036=B000001*D000001 
      G(001,1)=D000034
      G(002,1)=D000033
      ENDIF !1
      HH(001,1)=C000033
      HH(002,1)=C000032
      IF (FIRSTEM == 1) THEN !2
      HH(002,002)=D000036
      HH(002,003)=D000035
      ENDIF !2
      F=Y
      RETURN
      END
      SUBROUTINE TOL(NRD,ANRD,NRDC,ANRDC)
      USE SIZES,     ONLY: ISIZE
      INTEGER(KIND=ISIZE) :: NRD(0:*), ANRD(0:*), NRDC(0:*), ANRDC(0:*)
      NRD(1)=7 
      RETURN
      END
      SUBROUTINE DES (A,P,T,DADT,IR,DA,DP,DT)                                 
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMPRD_INT, ONLY: IERPRD,IERPRDU,NETEXT,IQUIT                        
      USE NMPRD_CHAR,ONLY: ETEXT                                              
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,IFIRSTEM,IFIRSTEMJAC,FIRSTEM
      USE PRCOM_INT, ONLY: DES_DER=>MITER
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE PRMOD_INT, ONLY: ICALL=>ICALLD,IDEFD,IDEFA
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                        
      SAVE
      INTEGER(KIND=ISIZE) :: IR                                               
      DIMENSION :: A(*),P(*),DADT(*),DA(IR,*),DP(IR,*),DT(*)                  
      INTEGER(KIND=ISIZE) :: IFIRSTEMJACIN
      FIRSTEM=IFIRSTEM
      IF(DES_DER==1.OR.DES_DER==4) FIRSTEM=1
      IFIRSTEMJACIN=IFIRSTEMJAC
      IF(NOFIRSTDERCODE/=1) THEN
      IFIRSTEMJAC=FIRSTEM
      ELSE
      IFIRSTEMJAC=0
      ENDIF
      IF(IFIRSTEMJACIN==-2) RETURN
      IF (ICALL == 1) THEN
      CALL ASSOCNMPRD4
      IDEFD(1)=  0
      IDEFD(2)=0
      DA(   1,1)=0000010100
      DA(   2,1)=0000020100
      DA(   3,1)=0000020200
      DA(   4,1)=0000000000
      DP(   1,1)=0000010200
      DP(   2,1)=0000020100
      DP(   3,1)=0000020200
      DP(   4,1)=0000020300
      DP(   5,1)=0000020400
      DP(   6,1)=0000000000
      DT(   1)=0000000000
      RETURN
      ENDIF
 !  level            0
 !  level            0
      CONC=A(2)/P(001) 
      DADT(1)=-P(002)*A(1) 
      B000003=P(003)+CONC 
      DADT(2)=P(002)*A(1)-P(004)*CONC/B000003 
      IF (FIRSTEM == 1) THEN ! 1
      B000001=1.D0/P(001) 
      B000002=-A(2)/P(001)/P(001) 
!                      E000005 = DERIVATIVE OF DADT(1) W.R.T. A(001)
      E000005=-P(002) 
!                      F000082 = DERIVATIVE OF DADT(1) W.R.T. P(002)
      F000082=-A(1) 
!                      E000007 = DERIVATIVE OF DADT(2) W.R.T. A(001)
      E000007=P(002) 
      B000004=-P(004)/B000003 
!                      E000008 = DERIVATIVE OF DADT(2) W.R.T. A(002)
      E000008=B000004*B000001 
      B000005=P(004)*CONC/B000003/B000003 
!                      E000009 = DERIVATIVE OF DADT(2) W.R.T. A(002)
      E000009=B000005*B000001+E000008 
!                      F000085 = DERIVATIVE OF DADT(2) W.R.T. P(002)
      F000085=A(1) 
      B000007=-CONC/B000003 
!                      F000086 = DERIVATIVE OF DADT(2) W.R.T. P(004)
      F000086=B000007 
      B000008=-P(004)/B000003 
!                      F000087 = DERIVATIVE OF DADT(2) W.R.T. P(001)
      F000087=B000008*B000002 
      B000009=P(004)*CONC/B000003/B000003 
!                      F000088 = DERIVATIVE OF DADT(2) W.R.T. P(001)
      F000088=B000009*B000002+F000087 
!                      F000089 = DERIVATIVE OF DADT(2) W.R.T. P(003)
      F000089=B000009 
      ENDIF !1
      IF (FIRSTEM == 1) THEN !2
      DA(   1,1)=E000005
      DA(   2,1)=E000007
      DA(   3,1)=E000009
      DP(   1,1)=F000082
      DP(   2,1)=F000088
      DP(   3,1)=F000085
      DP(   4,1)=F000089
      DP(   5,1)=F000086
      ENDIF !2
      RETURN
      END
      SUBROUTINE FSIZESR(NAME_FSIZES,F_SIZES)
      USE SIZES, ONLY: ISIZE
      INTEGER(KIND=ISIZE), DIMENSION(*) :: F_SIZES
      CHARACTER(LEN=*),    DIMENSION(*) :: NAME_FSIZES
      NAME_FSIZES(01)='LTH'; F_SIZES(01)=4
      NAME_FSIZES(02)='LVR'; F_SIZES(02)=4
      NAME_FSIZES(03)='LVR2'; F_SIZES(03)=0
      NAME_FSIZES(04)='LPAR'; F_SIZES(04)=10
      NAME_FSIZES(05)='LPAR3'; F_SIZES(05)=0
      NAME_FSIZES(06)='NO'; F_SIZES(06)=0
      NAME_FSIZES(07)='MMX'; F_SIZES(07)=1
      NAME_FSIZES(08)='LNP4'; F_SIZES(08)=0
      NAME_FSIZES(09)='LSUPP'; F_SIZES(09)=1
      NAME_FSIZES(10)='LIM7'; F_SIZES(10)=0
      NAME_FSIZES(11)='LWS3'; F_SIZES(11)=0
      NAME_FSIZES(12)='MAXIDS'; F_SIZES(12)=60
      NAME_FSIZES(13)='LIM1'; F_SIZES(13)=0
      NAME_FSIZES(14)='LIM2'; F_SIZES(14)=0
      NAME_FSIZES(15)='LIM3'; F_SIZES(15)=0
      NAME_FSIZES(16)='LIM4'; F_SIZES(16)=0
      NAME_FSIZES(17)='LIM5'; F_SIZES(17)=0
      NAME_FSIZES(18)='LIM6'; F_SIZES(18)=0
      NAME_FSIZES(19)='LIM8'; F_SIZES(19)=0
      NAME_FSIZES(20)='LIM10'; F_SIZES(20)=0
      NAME_FSIZES(21)='LIM11'; F_SIZES(21)=0
      NAME_FSIZES(22)='LIM13'; F_SIZES(22)=0
      NAME_FSIZES(23)='LIM15'; F_SIZES(23)=0
      NAME_FSIZES(24)='LIM16'; F_SIZES(24)=0
      NAME_FSIZES(25)='MAXRECID'; F_SIZES(25)=0
      NAME_FSIZES(26)='PC'; F_SIZES(26)=3
      NAME_FSIZES(27)='PCMORE'; F_SIZES(27)=0
      NAME_FSIZES(28)='PCT'; F_SIZES(28)=1
      NAME_FSIZES(29)='PIR'; F_SIZES(29)=6
      NAME_FSIZES(30)='PD'; F_SIZES(30)=7
      NAME_FSIZES(31)='PAL'; F_SIZES(31)=0
      NAME_FSIZES(32)='MAXFCN'; F_SIZES(32)=0
      NAME_FSIZES(33)='MAXIC'; F_SIZES(33)=0
      NAME_FSIZES(34)='PG'; F_SIZES(34)=0
      NAME_FSIZES(35)='NPOPMIXMAX'; F_SIZES(35)=0
      NAME_FSIZES(36)='MAXOMEG'; F_SIZES(36)=2
      NAME_FSIZES(37)='MAXPTHETA'; F_SIZES(37)=7
      NAME_FSIZES(38)='MAXITER'; F_SIZES(38)=20
      NAME_FSIZES(39)='ISAMPLEMAX'; F_SIZES(39)=0
      NAME_FSIZES(40)='DIMTMP'; F_SIZES(40)=0
      NAME_FSIZES(41)='DIMCNS'; F_SIZES(41)=0
      NAME_FSIZES(42)='DIMNEW'; F_SIZES(42)=0
      NAME_FSIZES(43)='PDT'; F_SIZES(43)=1
      NAME_FSIZES(44)='LADD_MAX'; F_SIZES(44)=0
      NAME_FSIZES(45)='MAXSIDL'; F_SIZES(45)=0
      NAME_FSIZES(46)='NTT'; F_SIZES(46)=4
      NAME_FSIZES(47)='NOMEG'; F_SIZES(47)=2
      NAME_FSIZES(48)='NSIGM'; F_SIZES(48)=2
      NAME_FSIZES(49)='PPDT'; F_SIZES(49)=1
      NAME_FSIZES(50)='PAST_SIZE'; F_SIZES(50)=0
      NAME_FSIZES(51)='MAXNRDS'; F_SIZES(51)=0
      RETURN
      END SUBROUTINE FSIZESR
      SUBROUTINE MUMODEL2(THETA,MU_,ICALL,IDEF,NEWIND,&
      EVTREC,DATREC,IREV,NVNT,INDXS,F,G,H,IRGG,GG,NETAS)
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMBAYES_REAL,    ONLY: PRIOR_INFO
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_INT, ONLY: PRED_IGNORE_DATA,PRED_IGNORE_DATA_TEST
      USE PRCOM_INT, ONLY: DES_DER=>MITER
      USE NMPRD_REAL,ONLY: ETA,EPS
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,COMACT,COMSAV,IFIRSTEM,FIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMPRD_INT, ONLY: IQUIT
      USE NMBAYES_REAL, ONLY: LDF
      USE NMBAYES_INT, ONLY: FLDF
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)
      REAL(KIND=DPSIZE)   :: MU_(*)
      INTEGER NEWIND
      REAL(KIND=DPSIZE) :: EVTREC
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS,IRGG,NETAS
      DIMENSION :: IDEF(7,*),THETA(*),EVTREC(IREV,*),INDXS(*),GG(IRGG,GPKD+1,*)
      RETURN
      END
